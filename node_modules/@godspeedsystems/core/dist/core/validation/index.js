"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    isValidEvent: function() {
        return isValidEvent;
    },
    isValidWorkflow: function() {
        return isValidWorkflow;
    }
});
const _ajv = /*#__PURE__*/ _interop_require_default(require("ajv"));
const _ajvformats = /*#__PURE__*/ _interop_require_default(require("ajv-formats"));
const _eventschemajson = /*#__PURE__*/ _interop_require_default(require("./event.schema.json"));
const _workflowschemajson = /*#__PURE__*/ _interop_require_default(require("./workflow.schema.json"));
const _logger = require("../../logger");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const ajvInstance = new _ajv.default({
    allErrors: true,
    coerceTypes: true,
    strictTuples: false,
    strictTypes: false,
    strict: false
});
(0, _ajvformats.default)(ajvInstance);
require('ajv-errors')(ajvInstance);
const validateEvent = ajvInstance.compile(_eventschemajson.default);
const validateWorkflow = ajvInstance.compile(_workflowschemajson.default);
const isValidEvent = (event, eventKey)=>{
    if (!validateEvent(event)) {
        _logger.logger.error('Event validation failed for %s', eventKey);
        _logger.logger.error(validateEvent.errors);
        return false;
    }
    return true;
};
const isValidWorkflow = (workflow, workflowKey)=>{
    if (!validateWorkflow(workflow)) {
        _logger.logger.error('Workflow validation failed for %s', workflowKey);
        _logger.logger.error(validateWorkflow.errors);
        return false;
    }
    return true;
};
const _default = ajvInstance;
